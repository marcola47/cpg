// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Familia {
  id        String   @id @default(uuid())
  nome      String   
  membros   FamiliaPessoa[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FamiliaPessoa{
  pessoa Pessoa @relation(fields: [pessoaId], references: [id])
  pessoaId String
  familia Familia @relation(fields: [familiaId], references: [id])
  familiaId String

  @@id([pessoaId, familiaId])
}

model Pessoa {
  id        String   @id @default(uuid())
  nome      String   

  genitorId String? @unique
  genitor   Pessoa? @relation("GenitorFilho", fields: [genitorId], references: [id])
  genitoraId String? @unique
  genitora   Pessoa? @relation("GenitoraFilho", fields: [genitoraId], references: [id])

  dataNascimento DateTime?  
  dataFalecimento DateTime?

  filhode    Pessoa? @relation("GenitorFilho") 
  filhoda   Pessoa? @relation("GenitoraFilho")

  familias FamiliaPessoa[]

  esposo Casamento[] @relation(name: "esposo")
  esposa Casamento[] @relation(name: "esposa")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Casamento {
  esposo Pessoa @relation(name: "esposo",fields: [esposoId], references: [id])
  esposoId String
  esposa Pessoa @relation(name: "esposa",fields: [esposaId], references: [id])
  esposaId String

  dataCasamento DateTime?
  localCasamento String?

  @@id([esposoId, esposaId])
}

model User{
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  nome      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}